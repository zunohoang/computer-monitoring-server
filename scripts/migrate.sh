#!/bin/bash

# ====================================
# Script ch·∫°y migration t·ª± ƒë·ªông
# ƒê∆∞·ª£c th·ª±c thi b·ªüi Docker container khi kh·ªüi ƒë·ªông
# ====================================

set -e  # Exit ngay khi c√≥ l·ªói

echo "========================================="
echo "üöÄ Starting Database Migration Script"
echo "========================================="

# Ki·ªÉm tra bi·∫øn m√¥i tr∆∞·ªùng Connection String
if [ -z "$ConnectionStrings__DefaultConnection" ]; then
    echo "‚ùå Error: ConnectionStrings__DefaultConnection is not set!"
    exit 1
fi

echo "‚úÖ Connection string is configured"
echo "üì¶ Database: $ConnectionStrings__DefaultConnection"

# Ch·ªù PostgreSQL s·∫µn s√†ng (t·ªëi ƒëa 60 gi√¢y)
echo ""
echo "‚è≥ Waiting for PostgreSQL to be ready..."
counter=0
max_attempts=60

while [ $counter -lt $max_attempts ]; do
    # Parse connection string ƒë·ªÉ l·∫•y host
    DB_HOST=$(echo $ConnectionStrings__DefaultConnection | sed -n 's/.*Host=\([^;]*\).*/\1/p')
    DB_PORT=${DB_PORT:-5432}
    
    if pg_isready -h "$DB_HOST" -p "$DB_PORT" > /dev/null 2>&1; then
        echo "‚úÖ PostgreSQL is ready!"
        break
    fi
    
    counter=$((counter + 1))
    echo "Waiting... ($counter/$max_attempts)"
    sleep 1
done

if [ $counter -eq $max_attempts ]; then
    echo "‚ùå Error: PostgreSQL is not ready after $max_attempts seconds"
    exit 1
fi

# Ch·∫°y migration
echo ""
echo "üîß Running Entity Framework migrations..."
echo "========================================="

if dotnet ef database update --no-build --verbose; then
    echo ""
    echo "========================================="
    echo "‚úÖ Migration completed successfully!"
    echo "========================================="
else
    echo ""
    echo "========================================="
    echo "‚ùå Migration failed!"
    echo "========================================="
    exit 1
fi

echo ""
echo "üéâ Database is ready for use!"
echo ""
